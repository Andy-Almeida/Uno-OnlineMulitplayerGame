{
  "version": 3,
  "sources": ["../../../node_modules/engine.io-parser/build/esm/commons.js", "../../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js", "../../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js", "../../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js", "../../../node_modules/engine.io-parser/build/esm/index.js", "../../../node_modules/@socket.io/component-emitter/index.mjs", "../../../node_modules/engine.io-client/build/esm/globalThis.browser.js", "../../../node_modules/engine.io-client/build/esm/util.js", "../../../node_modules/engine.io-client/build/esm/transport.js", "../../../node_modules/engine.io-client/build/esm/contrib/yeast.js", "../../../node_modules/engine.io-client/build/esm/contrib/parseqs.js", "../../../node_modules/engine.io-client/build/esm/contrib/has-cors.js", "../../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js", "../../../node_modules/engine.io-client/build/esm/transports/polling.js", "../../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js", "../../../node_modules/engine.io-client/build/esm/transports/websocket.js", "../../../node_modules/engine.io-client/build/esm/transports/index.js", "../../../node_modules/engine.io-client/build/esm/contrib/parseuri.js", "../../../node_modules/engine.io-client/build/esm/socket.js", "../../../node_modules/engine.io-client/build/esm/index.js", "../../../node_modules/socket.io-client/build/esm/url.js", "../../../node_modules/socket.io-parser/build/esm/is-binary.js", "../../../node_modules/socket.io-parser/build/esm/binary.js", "../../../node_modules/socket.io-parser/build/esm/index.js", "../../../node_modules/socket.io-client/build/esm/on.js", "../../../node_modules/socket.io-client/build/esm/socket.js", "../../../node_modules/socket.io-client/build/esm/contrib/backo2.js", "../../../node_modules/socket.io-client/build/esm/manager.js", "../../../node_modules/socket.io-client/build/esm/index.js", "../../sockets/constants.js", "../../../frontend/index.js"],
  "sourcesContent": ["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n", "import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n", "// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n", "import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n", "import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n", "/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n", "export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n", "import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n", "import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n", "// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n", "// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n", "// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n", "// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n", "import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n", "import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n", "import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n", "import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n", "// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n", "import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n", "import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n", "import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n", "const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n", "import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n", "import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n", "export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n", "import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n", "/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n", "import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n", "import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n", "const CHAT_MESSAGE_RECEIVED = \"chat-message-received\";\n\nmodule.exports = {\n  CHAT_MESSAGE_RECEIVED,\n};\n", "import io from \"socket.io-client\";\nimport events from \"../backend/sockets/constants\";\n\nconst socket = io();\nconsole.log(\"kjashdlkashdfkl\");\nconst messageContainer = document.querySelector(\"#messages\");\n\nsocket.on(events.CHAT_MESSAGE_RECEIVED, ({ username, message, timestamp }) => {\n  const entry = document.createElement(\"div\");\n\n  const displayName = document.createElement(\"span\");\n  displayName.innerText = username;\n  const displayMessage = document.createElement(\"span\");\n  displayMessage.innerText = message;\n  const displayTimestamp = document.createElement(\"span\");\n  displayTimestamp.innerText = timestamp;\n\n  entry.append(displayName, displayMessage, displayTimestamp);\n\n  messageContainer.appendChild(entry);\n});\n\ndocument\n  .querySelector(\"input#chatMessage\")\n  .addEventListener(\"keydown\", (event) => {\n    if (event.keyCode !== 13) {\n      return;\n    }\n\n    const message = event.target.value;\n    event.target.value = \"\";\n\n    fetch(\"/chat/0\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ message }),\n    });\n  });\n"],
  "mappings": "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",
  "names": ["i", "withNativeArrayBuffer", "length", "i", "on", "i", "length", "i", "encode", "i", "decode", "i", "encode", "i", "encode", "i", "decode", "i", "protocol", "init_esm", "init_esm", "withNativeArrayBuffer", "isView", "withNativeBlob", "i", "i", "protocol", "init_esm", "PacketType", "i", "Socket", "init_socket", "init_esm", "i", "self", "init_esm", "init_socket", "self", "Socket", "socket", "i", "lookup", "init_esm", "init_socket", "Socket", "init_esm", "lookup", "events"]
}
